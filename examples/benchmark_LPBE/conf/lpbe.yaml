expname: benchmark-lpbe-app

defaults:
  - base_hydra_config
  - solver: poisson
  - _self_

# customization follows
gridstates:
  Nx_lvl: 128  # grid for level-set; not used in this example bc not free boundary
  Ny_lvl: 128  # grid for level-set; not used with level set is given functionally
  Nz_lvl: 128  # grid for level-set; not used with level set is given functionally
  Nx_eval: 64  # grid for evaluation/visualization/validation
  Ny_eval: 64  # grid for evaluation/visualization/validation
  Nz_eval: 64  # grid for evaluation/visualization/validation

model: # TODO: add this to the model
  num_hidden_layers: 3
  num_hidden_units: 32
  resnet: false
  activation: "sin"
  wb_init_stddev: 1.0
  wb_init_mean: 0.0
  positional_enc: false
  positional_enc_stddev: 1.0

solver:
  inn_grid: true
  inn:
    train_out: 2000 # number of grid points in the outer domain; originally 2000
    train_inner: 100 # number of grid points in the inner domain; originally 100
    train_boundary: 1000 # number of grid points on the boundary; originally 1000
    train_gamma: 200 # number of grid points on the interface; originally 200
    Nx_tr: 4096  # grid for training voxel size: Lx/Nx
    Ny_tr: 4096  # grid for training voxel size: Ly/Ny
    Nz_tr: 4096  # grid for training voxel size: Lz/Nz
  uniform:
    Nx_tr: 64  # grid for training voxel size: Lx/Nx
    Ny_tr: 64  # grid for training voxel size: Ly/Ny
    Nz_tr: 64  # grid for training voxel size: Lz/Nz
  num_epochs: 25000 # number of epochs to train
  batch_size: 3300 # batch size for trainer. 
  print_rate: 10 # frequency of printing epochs and loss during training
  restart_from_checkpoint: false # whether to restart from an existing checkpoint
  algorithm: 0  # 0: regression normal derivatives, 1: neural network normal derivatives
  switching_interval: 3  # domain switching interval
  multi_gpu: false
  num_gpus_ddp: 1
  optim:
    optimizer_name: "custom" # options are "custom", "adam", "rmsprop"
    learning_rate: 1e-3
  sched:
    scheduler_name: "exponential" # options are "exponential", "polynomial"
    decay_rate: 0.9
  data_manager:
    refine: true
    refine_normals: false # if true will add extra points by moving grid points iteratively along minus normal of level-set function
    refine_lod: true # if true will add extra points by Octree using Kaolin

experiment:
  sphere:
    enable: True
    protein_name: single.pqr
    protein_path: inputs/sphere

  double_sphere:
    enable: False
    protein_name: double.pqr
    protein_path: inputs/sphere
  
  molecule:
    enable: False
    proteins_dir: inputs/pqr_input_mols
    num_gpus_batching: 3

  logging:
    checkpoint_interval: 500
    log_dir: ${hydra:runtime.output_dir}

